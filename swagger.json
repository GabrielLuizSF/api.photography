{
    "openapi": "3.0.0",
    "info": {
      "title": "Photography API Documentation",
      "description": "In this documentation you will be able to consult the API end-points and also test all available routes. Do not forget to register and carry out the authorization.",
      "contact": {
        "email": "contatogabrielluizdev@gmail.com"
      },
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "http://localhost:3700/",
        "description": "Local Server"
      }
    ],
    "paths": {
      "/users/": {
        "post": {
          "summary": "Create a new user",
          "description": "Route responsible for creating a new user",
          "tags": ["Users"],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "Users": {
                    "value": {
                      "name": "Gopher",
                      "username": "gopher",
                      "email": "gopher@gmail.com",
                      "password": "1234567",
                      "avatar": "https://raw.githubusercontent.com/egonelbre/gophers/master/.thumb/animation/gopher-dance-long-3x.gif",
                      "background": "https://raw.githubusercontent.com/egonelbre/gophers/master/.thumb/animation/2bit-sprite/demo.gif"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "400": {
              "description": "Not Found"
            },
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schemma": {
                    "type": "object",
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "/users": {
        "get": {
          "summary": "Search all users",
          "description": "Route responsible for fetching all users",
          "tags": ["Users"],
          "security": [{ "bearerAuth": [] }],
          "responses": {
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/{id}/": {
        "get": {
          "summary": "Search user by id",
          "description": "Route responsible for searching for user by id",
          "tags": ["Users"],
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "type": "string",
              "description": "User ID",
              "required": true
            }
          ],
          "responses": {
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "/users/update/{id}": {
        "patch": {
          "summary": "Update user by id",
          "description": "Route responsible for editing the user by id",
          "tags": ["Users"],
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "type": "string",
              "description": "User ID",
              "required": true
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "Users": {
                    "value": {
                      "name": "Gabriel Luiz"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "/auth": {
        "post": {
          "summary": "Login to Photography",
          "description": "Route responsible for logging in a registered user",
          "tags": ["Auth"],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "User": {
                    "value": {
                      "email": "gopher@gmail.com",
                      "password": "1234567"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/posts/": {
        "post": {
          "summary": "Create a new post",
          "description": "Route responsible for creating a new Posts",
          "tags": ["Posts"],
          "security": [{ "bearerAuth": [] }],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Posts"
                },
                "examples": {
                  "Posts": {
                    "value": {
                      "user": "",
                      "banner": "https://labs.tadigital.com/wp-content/uploads/2017/07/ES6-banner.jpg",
                      "title": "ECMAScript 6",
                      "text": "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                      "likes": [],
                      "comments": []
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Not Found"
            },
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schemma": {
                    "type": "object",
                    "$ref": "#/components/schemas/Posts"
                  }
                }
              }
            }
          }
        }
      },
      "/posts": {
        "get": {
          "summary": "Search all posts",
          "description": "Route responsible for fetching all posts",
          "tags": ["Posts"],
          "parameters": [
            {
              "in": "query",
              "name": "limit",
              "type": "string"
            },
            {
              "in": "query",
              "name": "offset",
              "type": "string"
            }
          ],
          "responses": {
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Posts"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/posts/news": {
        "get": {
          "summary": "Search News",
          "description": "Route responsible for fetching  News",
          "tags": ["Posts"],
          "responses": {
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schemma": {
                    "type": "object",
                    "$ref": "#/components/schemas/Posts"
                  }
                }
              }
            }
          }
        }
      },
      "/posts/search": {
        "get": {
          "summary": "Search Posts by title",
          "description": "Route responsible for fetching the Posts that match the title sent via query params",
          "tags": ["Posts"],
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "query",
              "name": "title",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Posts"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/posts/ByUser": {
        "get": {
          "summary": "Search posts by use id",
          "description": "Route responsible for fetching posts by use id",
          "tags": ["Posts"],
          "security": [{ "bearerAuth": [] }],
          "responses": {
            "400": {
              "description": "Not Found"
            },
            "401": {
              "description": "Unauthorized"
            },
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Posts"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/posts/{id}/": {
        "get": {
          "summary": "Search News by id",
          "description": "Route responsible for fetching News by id",
          "tags": ["Posts"],
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "type": "string",
              "description": "News ID",
              "required": true
            }
          ],
          "responses": {
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schemma": {
                    "type": "object",
                    "$ref": "#/components/schemas/Posts"
                  }
                }
              }
            }
          }
        }
      },
      "/posts/{id}": {
        "patch": {
          "summary": "Update a Post",
          "description": "Route responsible for updating a Post",
          "tags": ["Posts"],
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "type": "string",
              "description": "Post ID",
              "required": true
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Posts"
                },
                "examples": {
                  "Post": {
                    "value": {
                      "banner": "Edit",
                      "title": "Edit",
                      "text": "Edit"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schemma": {
                    "type": "object",
                    "$ref": "#/components/schemas/Posts"
                  }
                }
              }
            }
          }
        }
      },
      "/posts/{id}/": {
        "delete": {
          "summary": "Delete a Post",
          "description": "Route responsible for deleting a Post",
          "tags": ["Posts"],
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "type": "string",
              "description": "News ID",
              "required": true
            }
          ],
          "responses": {
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/posts/like/{id}/": {
        "patch": {
          "summary": "Like a Post",
          "description": "Route responsible for liking a Post",       
           "tags": ["Posts"],
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "type": "string",
              "description": "User ID",
              "required": true
            }
          ],
          "responses": {
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/posts/comment/{id}/": {
        "patch": {
          "summary": "Comment on a Posts",
          "description": "Route responsible for commenting on a Posts",
          "tags": ["Posts"],
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "type": "string",
              "description": "News ID",
              "required": true
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                },
                "examples": {
                  "Comment": {
                    "value": {
                      "message": "Comentário legal"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/posts/comment/{idPost}/delete/{idComment}": {
        "patch": {
          "summary": "Delete comment on a Posts",
          "description": "Route responsible for delete comment on a Post",
          "tags": ["Posts"],
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "path",
              "name": "idPost",
              "type": "string",
              "description": "News ID",
              "required": true
            },
            {
              "in": "path",
              "name": "idComment",
              "type": "string",
              "description": "Comment ID",
              "required": true
            }
          ],
          "responses": {
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK"
            }
          }
        }
      }
    },
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      },
      "schemas": {
        "User": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "avatar": {
              "type": "string"
            },
            "background": {
              "type": "string"
            }
          }
        },
        "Posts": {
          "type": "object",
          "properties": {
            "user": {
              "type": "string"
            },
            "banner": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "text": {
              "type": "string"
            },
            "likes": {
              "type": "number"
            },
            "comments": {
              "type": "array"
            },
            "createdAt": {
              "type": "date"
            }
          }
        },
        "Comment": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            }
          }
        }
      }
    }
  }
  